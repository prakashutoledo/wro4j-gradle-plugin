buildscript {
    ext {
        wro4jExtensionsVersion = '1.8.0'
        mockitoAllVersion = '1.10.19'
        commonsLangVersion = '2.6'
        javaxServletApiVersion = '3.1.0'
        netflixNebulaTestVersion = '4.0.0'
    }
}

plugins {
    id 'groovy'
    id 'java-library'
    id 'java-gradle-plugin'
    id 'maven-publish'
    id 'com.jfrog.bintray' version '1.8.5'
}

group = 'ro.isdc.wro4j.gradle'
version = '1.32.0.Beta10'

sourceCompatibility = 1.6
targetCompatibility = 1.6


repositories {
    jcenter()
}

dependencies {
    api gradleApi()
    api localGroovy()
    api ("ro.isdc.wro4j:wro4j-extensions:${wro4jExtensionsVersion}") {
        exclude module: 'groovy-all'
    }
    api "commons-lang:commons-lang:${commonsLangVersion}"
    api "javax.servlet:javax.servlet-api:${javaxServletApiVersion}"
    api "org.mockito:mockito-all:${mockitoAllVersion}"

    testImplementation ("com.netflix.nebula:nebula-test:${netflixNebulaTestVersion}") {
        exclude module: 'groovy-all'
    }
    testImplementation ("org.spockframework:spock-core:2.0-M2-groovy-2.5") {
        exclude group: 'org.codehaus.groovy', module: 'groovy'
        exclude group: 'org.codegaus.groovy', module: 'groovy-test'
    }
}

gradlePlugin {
    plugins {
        wro4jPlugin {
            id = 'wro4j'
            implementationClass = 'ro.isdc.wro4j.gradle.Wro4JPlugin'
        }
    }
}

bintray {
    user = System.getProperty('bintrayUser')
    key = System.getProperty('bintrayApiKey')
    pkg {
        repo = 'maven'
        name = 'wro4j-gradle-plugin'
        desc = 'Wro4J Gradle Plugin'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/IlyaAI/wro4j-gradle-plugin.git'
        labels = ['wro4j', 'gradle', 'plugin']
    }
    publications = ['bintray']
}

task sourceJar(type: Jar) {
    from project.sourceSets.main.allSource, processResources.outputs

    project.afterEvaluate {
        manifest {
            attributes("Implementation-Version": project.version, "Implementation-Title": project.name)
        }
    }
}

publishing {
    publications {
        create('bintray', MavenPublication) { publication ->
            publication.from project.components.java

            publication.artifact(project.sourceJar) {
                classifier = "sources"
            }
            
            publication.version = project.version
            publication.artifactId =  project.name
            publication.groupId = project.group
        }
    }
}
